
Allocating common symbols
Common symbol       size              file

heap                0x100             lib.x86_64.o
free_list           0x8               lib.x86_64.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0xffff800000000000                . = 0xffff800000000000

ro_segment      0xffff800000000000     0x2660
 *(.text .rodata .rodata.*)
 .text          0xffff800000000000       0x1a x86_64/crt.x86_64.o
                0xffff800000000000                _start
                0xffff800000000018                __main
                0xffff800000000019                __stack_chk_fail
 .text          0xffff80000000001a        0x3 x86_64/_syscall.x86_64.o
                0xffff80000000001a                _syscall
 *fill*         0xffff80000000001d        0x3 
 .text          0xffff800000000020     0x2434 lib.x86_64.o
                0xffff800000000d90                syscall_halt
                0xffff800000000db0                syscall_hello
                0xffff800000000dd0                syscall_getpid
                0xffff800000000df0                syscall_spawn
                0xffff800000000e10                syscall_exit
                0xffff800000000e30                syscall_join
                0xffff800000000e50                syscall_fork
                0xffff800000000e70                syscall_memlimit
                0xffff800000000ea0                syscall_open
                0xffff800000000ec0                syscall_close
                0xffff800000000ee0                syscall_read
                0xffff800000000f00                syscall_write
                0xffff800000000f20                syscall_seek
                0xffff800000000f40                syscall_create
                0xffff800000000f60                syscall_delete
                0xffff800000000f80                syscall_filecount
                0xffff800000000fa0                syscall_file
                0xffff800000000fc0                strlen
                0xffff800000000fe0                strcpy
                0xffff800000001010                strncpy
                0xffff800000001050                strcat
                0xffff8000000010a0                strncat
                0xffff800000001110                strcmp
                0xffff800000001160                strncmp
                0xffff8000000011b0                memcmp
                0xffff800000001200                strstr
                0xffff800000001270                memset
                0xffff800000001290                memcpy
                0xffff8000000012c0                putc
                0xffff8000000012f0                puts
                0xffff800000001320                getc_raw
                0xffff800000001350                getc
                0xffff8000000013a0                gets
                0xffff800000001440                readline_static
                0xffff800000001550                readline
                0xffff800000001d60                printf
                0xffff800000001e10                snprintf
                0xffff800000001eb0                heap_init
                0xffff800000001ee0                malloc
                0xffff800000001fa0                free
                0xffff800000002040                calloc
                0xffff800000002120                realloc
                0xffff800000002400                atoi
 *fill*         0xffff800000002454        0xc 
 .rodata        0xffff800000002460      0x200 lib.x86_64.o
 .text          0xffff800000002660        0x0 halt.x86_64.o

.text.startup   0xffff800000002660       0x17
 .text.startup  0xffff800000002660       0x17 halt.x86_64.o
                0xffff800000002660                main

.eh_frame       0xffff800000002678      0x588
 .eh_frame      0xffff800000002678      0x570 lib.x86_64.o
                                        0x4d8 (size before relaxing)
 .eh_frame      0xffff800000002be8       0x18 halt.x86_64.o
                                         0x30 (size before relaxing)

.rela.dyn       0xffff800000002c00        0x0
 .rela.text     0xffff800000002c00        0x0 x86_64/crt.x86_64.o

rw_segment      0xffff800000003000      0x108
 *(.data .bss COMMON)
 .data          0xffff800000003000        0x0 x86_64/crt.x86_64.o
 .bss           0xffff800000003000        0x0 x86_64/crt.x86_64.o
 .data          0xffff800000003000        0x0 x86_64/_syscall.x86_64.o
 .bss           0xffff800000003000        0x0 x86_64/_syscall.x86_64.o
 .data          0xffff800000003000        0x0 lib.x86_64.o
 .bss           0xffff800000003000        0x0 lib.x86_64.o
 COMMON         0xffff800000003000      0x108 lib.x86_64.o
                0xffff800000003000                heap
                0xffff800000003100                free_list
 .data          0xffff800000003108        0x0 halt.x86_64.o
 .bss           0xffff800000003108        0x0 halt.x86_64.o
                0xffff800000003108                BINARY_ENDS_HERE = .
LOAD x86_64/crt.x86_64.o
LOAD x86_64/_syscall.x86_64.o
LOAD lib.x86_64.o
LOAD halt.x86_64.o
OUTPUT(halt.x86_64 elf64-x86-64)

.comment        0x0000000000000000       0x1a
 .comment       0x0000000000000000       0x1a lib.x86_64.o
                                         0x1b (size before relaxing)
 .comment       0x000000000000001a       0x1b halt.x86_64.o

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 lib.x86_64.o
 .note.GNU-stack
                0x0000000000000000        0x0 halt.x86_64.o
